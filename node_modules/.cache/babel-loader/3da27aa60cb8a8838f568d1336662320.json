{"ast":null,"code":"import _regeneratorRuntime from\"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/**\n * There are lots of action creator:\n *      synchronized action\n *      asynchronized action\n */import io from'socket.io-client';import{reqRegister,reqLogin,reqUpdateUser,reqUser,reqUserList,reqChatMsgList,reqReadMsg}from'../api';import{AUTH_SUCCESS,ERROR_MSG,RECEIVE_USER,RESET_USER,RECEIVE_USER_LIST,RECEIVE_MSG_LIST,RECEIVE_MSG,MSG_READ}from'./action-types';/**\n * single example obj\n * 1. before creating obj: check obj is created or not, only create it if not\n * 2. after creating obj: save obj\n */function initIO(dispatch,userId){if(!io.socket){// connect server, get socket obj\nio.socket=io('ws://localhost:4000',{transports:['websocket']});// bind 'receiveMessage' monitor, to receive msg from server\nio.socket.on('receiveMsg',function(chatMsg){console.log('Browser received msg:',chatMsg);// only chatMsg is related to current user, to dispatch\nif(userId===chatMsg.from||userId===chatMsg.to){dispatch(receiveMsg(chatMsg,userId));}});}}/**\n * async get msg list data\n */function getMsgList(_x,_x2){return _getMsgList.apply(this,arguments);}/**\n * async send msg in chat\n */function _getMsgList(){_getMsgList=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch,userId){var response,result,_result$data,users,chatMsgs;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:initIO(dispatch,userId);_context7.next=3;return reqChatMsgList();case 3:response=_context7.sent;result=response.data;if(result!==0){_result$data=result.data,users=_result$data.users,chatMsgs=_result$data.chatMsgs;// dispatch action\ndispatch(receiveMsgList({users:users,chatMsgs:chatMsgs,userId:userId}));}case 6:case\"end\":return _context7.stop();}}},_callee7);}));return _getMsgList.apply(this,arguments);}export var sendMsg=function sendMsg(_ref){var from=_ref.from,to=_ref.to,content=_ref.content;return function(dispatch){console.log('send msg:',{from:from,to:to,content:content});io.socket.emit('sendMsg',{from:from,to:to,content:content});};};/**\n * auth success sync action\n */var authSuccess=function authSuccess(user){return{type:AUTH_SUCCESS,data:user};};/**\n * msg info sync action\n */var errorMsg=function errorMsg(msg){return{type:ERROR_MSG,data:msg};};/**\n * receive  user sync action\n */var receiveUser=function receiveUser(user){return{type:RECEIVE_USER,data:user};};/**\n * reset user sync action\n */export var resetUser=function resetUser(msg){return{type:RESET_USER,data:msg};};/**\n * received user list sync action\n */var receivedUserList=function receivedUserList(userList){return{type:RECEIVE_USER_LIST,data:userList};};/**\n * received msg list sync action\n */var receiveMsgList=function receiveMsgList(_ref2){var users=_ref2.users,chatMsgs=_ref2.chatMsgs,userId=_ref2.userId;return{type:RECEIVE_MSG_LIST,data:{users:users,chatMsgs:chatMsgs,userId:userId}};};/**\n * received one msg sync action\n */var receiveMsg=function receiveMsg(chatMsg,userId){return{type:RECEIVE_MSG,data:{chatMsg:chatMsg,userId:userId}};};/**\n * read msg read\n */var msgRead=function msgRead(_ref3){var count=_ref3.count,from=_ref3.from,to=_ref3.to;return{type:MSG_READ,data:{count:count,from:from,to:to}};};/**\n * register\n */export var register=function register(user){var username=user.username,password=user.password,password2=user.password2,type=user.type;// do validation before send request\nif(!username){return errorMsg('you have to enter username');}if(password!==password2){return errorMsg('two time passwords should be the same');}if(!password||!password2){return errorMsg('passwords must be entered');}if(password.length<6){return errorMsg('the length of password should more than 6');}var reg=/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{6,}$/;if(!reg.test(password)){return errorMsg('passwords miss at least a symbol, upper and lower case letters and a number');}// form data is valid\nreturn/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return reqRegister({username:username,password:password,type:type});case 2:response=_context.sent;result=response.data;if(result.code===0){// success\ngetMsgList(dispatch,result.data._id);// dispatch success action\ndispatch(authSuccess(result.data));}else{// fail\n// dispatch fail action\ndispatch(errorMsg(result.msg));}case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x3){return _ref4.apply(this,arguments);};}();};/**\n * login\n */export var login=function login(user){var username=user.username,password=user.password;// do validation before send request\nif(!username){return errorMsg('you have to enter username');}if(!password){return errorMsg('password should be the entering');}return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return reqLogin(user);case 2:response=_context2.sent;result=response.data;if(result.code===0){// success\ngetMsgList(dispatch,result.data._id);// dispatch success action\ndispatch(authSuccess(result.data));}else{// fail\n// dispatch fail action\ndispatch(errorMsg(result.msg));}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4){return _ref5.apply(this,arguments);};}();};/**\n * update\n */export var update=function update(user){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response,result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return reqUpdateUser(user);case 2:response=_context3.sent;result=response.data;if(result.code===0){// success\ndispatch(receiveUser(result.data));}else{// fail\ndispatch(resetUser(result.msg));}case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5){return _ref6.apply(this,arguments);};}();};/**\n * get userInfo according to cookie\n */export var getUser=function getUser(){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var response,result;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return reqUser();case 2:response=_context4.sent;result=response.data;if(result.code===0){getMsgList(dispatch,result.data._id);dispatch(receiveUser(result.data));}else{dispatch(resetUser(result.msg));}case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x6){return _ref7.apply(this,arguments);};}();};/**\n * get userList async action\n */export var getUserList=function getUserList(type){return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var response,result;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return reqUserList(type);case 2:response=_context5.sent;result=response.data;if(result.code===0){dispatch(receivedUserList(result.data));}case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x7){return _ref8.apply(this,arguments);};}();};/**\n * read un read msg\n */export var readMsg=function readMsg(from,to){return/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var response,result,count;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return reqReadMsg(from);case 2:response=_context6.sent;result=response.data;if(result.code===0){count=result.data;dispatch(msgRead({count:count,from:from,to:to}));}case 5:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x8){return _ref9.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/stewardsun/Desktop/技术栈/React项目/Boss Recruitment/bob-recruitment-client/src/redux/actions.js"],"names":["io","reqRegister","reqLogin","reqUpdateUser","reqUser","reqUserList","reqChatMsgList","reqReadMsg","AUTH_SUCCESS","ERROR_MSG","RECEIVE_USER","RESET_USER","RECEIVE_USER_LIST","RECEIVE_MSG_LIST","RECEIVE_MSG","MSG_READ","initIO","dispatch","userId","socket","transports","on","chatMsg","console","log","from","to","receiveMsg","getMsgList","response","result","data","users","chatMsgs","receiveMsgList","sendMsg","content","emit","authSuccess","user","type","errorMsg","msg","receiveUser","resetUser","receivedUserList","userList","msgRead","count","register","username","password","password2","length","reg","test","code","_id","login","update","getUser","getUserList","readMsg"],"mappings":"ubAAA;AACA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,EAAP,KAAe,kBAAf,CACA,OAASC,WAAT,CAAsBC,QAAtB,CAAgCC,aAAhC,CAA+CC,OAA/C,CAAwDC,WAAxD,CAAqEC,cAArE,CAAqFC,UAArF,KAAuG,QAAvG,CACA,OAASC,YAAT,CAAuBC,SAAvB,CAAkCC,YAAlC,CAAgDC,UAAhD,CAA4DC,iBAA5D,CAA+EC,gBAA/E,CAAiGC,WAAjG,CAA8GC,QAA9G,KAA8H,gBAA9H,CACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,MAAT,CAAgBC,QAAhB,CAA0BC,MAA1B,CAAkC,CAC9B,GAAI,CAAClB,EAAE,CAACmB,MAAR,CAAgB,CACZ;AACAnB,EAAE,CAACmB,MAAH,CAAYnB,EAAE,CAAC,qBAAD,CAAwB,CAAEoB,UAAU,CAAE,CAAC,WAAD,CAAd,CAAxB,CAAd,CACA;AACApB,EAAE,CAACmB,MAAH,CAAUE,EAAV,CAAa,YAAb,CAA2B,SAAUC,OAAV,CAAmB,CAC1CC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCF,OAArC,EACA;AACA,GAAIJ,MAAM,GAAKI,OAAO,CAACG,IAAnB,EAA2BP,MAAM,GAAKI,OAAO,CAACI,EAAlD,CAAsD,CAClDT,QAAQ,CAACU,UAAU,CAACL,OAAD,CAAUJ,MAAV,CAAX,CAAR,CACH,CACJ,CAND,EAOH,CACJ,CACD;AACA;AACA,G,QACeU,CAAAA,U,mDAUf;AACA;AACA,G,2FAZA,kBAA0BX,QAA1B,CAAoCC,MAApC,sKACIF,MAAM,CAACC,QAAD,CAAWC,MAAX,CAAN,CADJ,uBAE2BZ,CAAAA,cAAc,EAFzC,QAEUuB,QAFV,gBAGUC,MAHV,CAGmBD,QAAQ,CAACE,IAH5B,CAII,GAAID,MAAM,GAAK,CAAf,CAAkB,cACcA,MAAM,CAACC,IADrB,CACNC,KADM,cACNA,KADM,CACCC,QADD,cACCA,QADD,CAEd;AACAhB,QAAQ,CAACiB,cAAc,CAAC,CAAEF,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAmBf,MAAM,CAANA,MAAnB,CAAD,CAAf,CAAR,CACH,CARL,wD,6CAaA,MAAO,IAAMiB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA2B,IAAxBV,CAAAA,IAAwB,MAAxBA,IAAwB,CAAlBC,EAAkB,MAAlBA,EAAkB,CAAdU,OAAc,MAAdA,OAAc,CAC9C,MAAO,UAAAnB,QAAQ,CAAI,CACfM,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyB,CAAEC,IAAI,CAAJA,IAAF,CAAQC,EAAE,CAAFA,EAAR,CAAYU,OAAO,CAAPA,OAAZ,CAAzB,EACApC,EAAE,CAACmB,MAAH,CAAUkB,IAAV,CAAe,SAAf,CAA0B,CAAEZ,IAAI,CAAJA,IAAF,CAAQC,EAAE,CAAFA,EAAR,CAAYU,OAAO,CAAPA,OAAZ,CAA1B,EACH,CAHD,CAIH,CALM,CAMP;AACA;AACA,GACA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,QAAW,CAAEC,IAAI,CAAEhC,YAAR,CAAsBuB,IAAI,CAAEQ,IAA5B,CAAX,EAApB,CACA;AACA;AACA,GACA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,QAAU,CAAEF,IAAI,CAAE/B,SAAR,CAAmBsB,IAAI,CAAEW,GAAzB,CAAV,EAAjB,CACA;AACA;AACA,GACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,IAAD,QAAW,CAAEC,IAAI,CAAE9B,YAAR,CAAsBqB,IAAI,CAAEQ,IAA5B,CAAX,EAApB,CACA;AACA;AACA,GACA,MAAO,IAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACF,GAAD,QAAU,CAAEF,IAAI,CAAE7B,UAAR,CAAoBoB,IAAI,CAAEW,GAA1B,CAAV,EAAlB,CACP;AACA;AACA,GACA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,QAAD,QAAe,CAAEN,IAAI,CAAE5B,iBAAR,CAA2BmB,IAAI,CAAEe,QAAjC,CAAf,EAAzB,CACA;AACA;AACA,GACA,GAAMZ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,WAAGF,CAAAA,KAAH,OAAGA,KAAH,CAAUC,QAAV,OAAUA,QAAV,CAAoBf,MAApB,OAAoBA,MAApB,OAAkC,CAAEsB,IAAI,CAAE3B,gBAAR,CAA0BkB,IAAI,CAAE,CAAEC,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAmBf,MAAM,CAANA,MAAnB,CAAhC,CAAlC,EAAvB,CACA;AACA;AACA,GACA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,OAAD,CAAUJ,MAAV,QAAsB,CAAEsB,IAAI,CAAE1B,WAAR,CAAqBiB,IAAI,CAAE,CAAET,OAAO,CAAPA,OAAF,CAAWJ,MAAM,CAANA,MAAX,CAA3B,CAAtB,EAAnB,CACA;AACA;AACA,GACA,GAAM6B,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,WAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUvB,IAAV,OAAUA,IAAV,CAAgBC,EAAhB,OAAgBA,EAAhB,OAA0B,CAAEc,IAAI,CAAEzB,QAAR,CAAkBgB,IAAI,CAAE,CAAEiB,KAAK,CAALA,KAAF,CAASvB,IAAI,CAAJA,IAAT,CAAeC,EAAE,CAAFA,EAAf,CAAxB,CAA1B,EAAhB,CAGA;AACA;AACA,GACA,MAAO,IAAMuB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACV,IAAD,CAAU,CAC9B,GAAQW,CAAAA,QAAR,CAAgDX,IAAhD,CAAQW,QAAR,CAAkBC,QAAlB,CAAgDZ,IAAhD,CAAkBY,QAAlB,CAA4BC,SAA5B,CAAgDb,IAAhD,CAA4Ba,SAA5B,CAAuCZ,IAAvC,CAAgDD,IAAhD,CAAuCC,IAAvC,CACA;AACA,GAAI,CAACU,QAAL,CAAe,CACX,MAAOT,CAAAA,QAAQ,CAAC,4BAAD,CAAf,CACH,CACD,GAAIU,QAAQ,GAAKC,SAAjB,CAA4B,CACxB,MAAOX,CAAAA,QAAQ,CAAC,uCAAD,CAAf,CACH,CACD,GAAI,CAACU,QAAD,EAAa,CAACC,SAAlB,CAA6B,CACzB,MAAOX,CAAAA,QAAQ,CAAC,2BAAD,CAAf,CACH,CACD,GAAIU,QAAQ,CAACE,MAAT,CAAkB,CAAtB,CAAyB,CACrB,MAAOZ,CAAAA,QAAQ,CAAC,2CAAD,CAAf,CACH,CACD,GAAIa,CAAAA,GAAG,CAAG,uDAAV,CACA,GAAI,CAACA,GAAG,CAACC,IAAJ,CAASJ,QAAT,CAAL,CAAyB,CACrB,MAAOV,CAAAA,QAAQ,CAAC,6EAAD,CAAf,CACH,CAED;AACA,gGAAO,iBAAMxB,QAAN,4JAEoBhB,CAAAA,WAAW,CAAC,CAAEiD,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAAsBX,IAAI,CAAJA,IAAtB,CAAD,CAF/B,QAEGX,QAFH,eAGGC,MAHH,CAGYD,QAAQ,CAACE,IAHrB,CAIH,GAAID,MAAM,CAAC0B,IAAP,GAAgB,CAApB,CAAuB,CAAE;AACrB5B,UAAU,CAACX,QAAD,CAAWa,MAAM,CAACC,IAAP,CAAY0B,GAAvB,CAAV,CACA;AACAxC,QAAQ,CAACqB,WAAW,CAACR,MAAM,CAACC,IAAR,CAAZ,CAAR,CACH,CAJD,IAIO,CAAE;AACL;AACAd,QAAQ,CAACwB,QAAQ,CAACX,MAAM,CAACY,GAAR,CAAT,CAAR,CACH,CAXE,sDAAP,iEAaH,CAlCM,CAoCP;AACA;AACA,GACA,MAAO,IAAMgB,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACnB,IAAD,CAAU,CAC3B,GAAQW,CAAAA,QAAR,CAA+BX,IAA/B,CAAQW,QAAR,CAAkBC,QAAlB,CAA+BZ,IAA/B,CAAkBY,QAAlB,CACA;AACA,GAAI,CAACD,QAAL,CAAe,CACX,MAAOT,CAAAA,QAAQ,CAAC,4BAAD,CAAf,CACH,CACD,GAAI,CAACU,QAAL,CAAe,CACX,MAAOV,CAAAA,QAAQ,CAAC,iCAAD,CAAf,CACH,CACD,gGAAO,kBAAMxB,QAAN,iKAEoBf,CAAAA,QAAQ,CAACqC,IAAD,CAF5B,QAEGV,QAFH,gBAGGC,MAHH,CAGYD,QAAQ,CAACE,IAHrB,CAIH,GAAID,MAAM,CAAC0B,IAAP,GAAgB,CAApB,CAAuB,CAAE;AACrB5B,UAAU,CAACX,QAAD,CAAWa,MAAM,CAACC,IAAP,CAAY0B,GAAvB,CAAV,CACA;AACAxC,QAAQ,CAACqB,WAAW,CAACR,MAAM,CAACC,IAAR,CAAZ,CAAR,CACH,CAJD,IAIO,CAAE;AACL;AACAd,QAAQ,CAACwB,QAAQ,CAACX,MAAM,CAACY,GAAR,CAAT,CAAR,CACH,CAXE,wDAAP,iEAaH,CAtBM,CAwBP;AACA;AACA,GACA,MAAO,IAAMiB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACpB,IAAD,CAAU,CAC5B,gGAAO,kBAAMtB,QAAN,iKACoBd,CAAAA,aAAa,CAACoC,IAAD,CADjC,QACGV,QADH,gBAEGC,MAFH,CAEYD,QAAQ,CAACE,IAFrB,CAGH,GAAID,MAAM,CAAC0B,IAAP,GAAgB,CAApB,CAAuB,CAAE;AACrBvC,QAAQ,CAAC0B,WAAW,CAACb,MAAM,CAACC,IAAR,CAAZ,CAAR,CACH,CAFD,IAEO,CAAE;AACLd,QAAQ,CAAC2B,SAAS,CAACd,MAAM,CAACY,GAAR,CAAV,CAAR,CACH,CAPE,wDAAP,iEASH,CAVM,CAYP;AACA;AACA,GACA,MAAO,IAAMkB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACzB,gGAAO,kBAAM3C,QAAN,iKACoBb,CAAAA,OAAO,EAD3B,QACGyB,QADH,gBAEGC,MAFH,CAEYD,QAAQ,CAACE,IAFrB,CAGH,GAAID,MAAM,CAAC0B,IAAP,GAAgB,CAApB,CAAuB,CACnB5B,UAAU,CAACX,QAAD,CAAWa,MAAM,CAACC,IAAP,CAAY0B,GAAvB,CAAV,CACAxC,QAAQ,CAAC0B,WAAW,CAACb,MAAM,CAACC,IAAR,CAAZ,CAAR,CACH,CAHD,IAGO,CACHd,QAAQ,CAAC2B,SAAS,CAACd,MAAM,CAACY,GAAR,CAAV,CAAR,CACH,CARE,wDAAP,iEAUH,CAXM,CAaP;AACA;AACA,GACA,MAAO,IAAMmB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACrB,IAAD,CAAU,CACjC,gGAAO,kBAAMvB,QAAN,iKACoBZ,CAAAA,WAAW,CAACmC,IAAD,CAD/B,QACGX,QADH,gBAEGC,MAFH,CAEYD,QAAQ,CAACE,IAFrB,CAGH,GAAID,MAAM,CAAC0B,IAAP,GAAgB,CAApB,CAAuB,CACnBvC,QAAQ,CAAC4B,gBAAgB,CAACf,MAAM,CAACC,IAAR,CAAjB,CAAR,CACH,CALE,wDAAP,iEAOH,CARM,CAUP;AACA;AACA,GACA,MAAO,IAAM+B,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACrC,IAAD,CAAOC,EAAP,CAAc,CACjC,gGAAO,kBAAMT,QAAN,uKACoBV,CAAAA,UAAU,CAACkB,IAAD,CAD9B,QACGI,QADH,gBAEGC,MAFH,CAEYD,QAAQ,CAACE,IAFrB,CAGH,GAAID,MAAM,CAAC0B,IAAP,GAAgB,CAApB,CAAuB,CACbR,KADa,CACLlB,MAAM,CAACC,IADF,CAEnBd,QAAQ,CAAC8B,OAAO,CAAC,CAAEC,KAAK,CAALA,KAAF,CAASvB,IAAI,CAAJA,IAAT,CAAeC,EAAE,CAAFA,EAAf,CAAD,CAAR,CAAR,CACH,CANE,wDAAP,iEAQH,CATM","sourcesContent":["/**\n * There are lots of action creator:\n *      synchronized action\n *      asynchronized action\n */\nimport io from 'socket.io-client'\nimport { reqRegister, reqLogin, reqUpdateUser, reqUser, reqUserList, reqChatMsgList, reqReadMsg } from '../api'\nimport { AUTH_SUCCESS, ERROR_MSG, RECEIVE_USER, RESET_USER, RECEIVE_USER_LIST, RECEIVE_MSG_LIST, RECEIVE_MSG, MSG_READ } from './action-types'\n/**\n * single example obj\n * 1. before creating obj: check obj is created or not, only create it if not\n * 2. after creating obj: save obj\n */\nfunction initIO(dispatch, userId) {\n    if (!io.socket) {\n        // connect server, get socket obj\n        io.socket = io('ws://localhost:4000', { transports: ['websocket'] })\n        // bind 'receiveMessage' monitor, to receive msg from server\n        io.socket.on('receiveMsg', function (chatMsg) {\n            console.log('Browser received msg:', chatMsg);\n            // only chatMsg is related to current user, to dispatch\n            if (userId === chatMsg.from || userId === chatMsg.to) {\n                dispatch(receiveMsg(chatMsg, userId));\n            }\n        })\n    }\n}\n/**\n * async get msg list data\n */\nasync function getMsgList(dispatch, userId) {\n    initIO(dispatch, userId);\n    const response = await reqChatMsgList();\n    const result = response.data;\n    if (result !== 0) {\n        const { users, chatMsgs } = result.data;\n        // dispatch action\n        dispatch(receiveMsgList({ users, chatMsgs, userId }));\n    }\n}\n/**\n * async send msg in chat\n */\nexport const sendMsg = ({ from, to, content }) => {\n    return dispatch => {\n        console.log('send msg:', { from, to, content });\n        io.socket.emit('sendMsg', { from, to, content })\n    }\n}\n/**\n * auth success sync action\n */\nconst authSuccess = (user) => ({ type: AUTH_SUCCESS, data: user });\n/**\n * msg info sync action\n */\nconst errorMsg = (msg) => ({ type: ERROR_MSG, data: msg });\n/**\n * receive  user sync action\n */\nconst receiveUser = (user) => ({ type: RECEIVE_USER, data: user });\n/**\n * reset user sync action\n */\nexport const resetUser = (msg) => ({ type: RESET_USER, data: msg });\n/**\n * received user list sync action\n */\nconst receivedUserList = (userList) => ({ type: RECEIVE_USER_LIST, data: userList });\n/**\n * received msg list sync action\n */\nconst receiveMsgList = ({ users, chatMsgs, userId }) => ({ type: RECEIVE_MSG_LIST, data: { users, chatMsgs, userId } });\n/**\n * received one msg sync action\n */\nconst receiveMsg = (chatMsg, userId) => ({ type: RECEIVE_MSG, data: { chatMsg, userId } });\n/**\n * read msg read\n */\nconst msgRead = ({ count, from, to }) => ({ type: MSG_READ, data: { count, from, to } });\n\n\n/**\n * register\n */\nexport const register = (user) => {\n    const { username, password, password2, type } = user;\n    // do validation before send request\n    if (!username) {\n        return errorMsg('you have to enter username');\n    }\n    if (password !== password2) {\n        return errorMsg('two time passwords should be the same');\n    }\n    if (!password || !password2) {\n        return errorMsg('passwords must be entered');\n    }\n    if (password.length < 6) {\n        return errorMsg('the length of password should more than 6');\n    }\n    var reg = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{6,}$/;\n    if (!reg.test(password)) {\n        return errorMsg('passwords miss at least a symbol, upper and lower case letters and a number');\n    }\n\n    // form data is valid\n    return async dispatch => {\n        // send register asyn request\n        const response = await reqRegister({ username, password, type });\n        const result = response.data;\n        if (result.code === 0) { // success\n            getMsgList(dispatch, result.data._id);\n            // dispatch success action\n            dispatch(authSuccess(result.data));\n        } else { // fail\n            // dispatch fail action\n            dispatch(errorMsg(result.msg));\n        }\n    }\n}\n\n/**\n * login\n */\nexport const login = (user) => {\n    const { username, password } = user;\n    // do validation before send request\n    if (!username) {\n        return errorMsg('you have to enter username');\n    }\n    if (!password) {\n        return errorMsg('password should be the entering');\n    }\n    return async dispatch => {\n        // send login asyn request\n        const response = await reqLogin(user);\n        const result = response.data;\n        if (result.code === 0) { // success\n            getMsgList(dispatch, result.data._id);\n            // dispatch success action\n            dispatch(authSuccess(result.data));\n        } else { // fail\n            // dispatch fail action\n            dispatch(errorMsg(result.msg));\n        }\n    }\n}\n\n/**\n * update\n */\nexport const update = (user) => {\n    return async dispatch => {\n        const response = await reqUpdateUser(user);\n        const result = response.data;\n        if (result.code === 0) { // success\n            dispatch(receiveUser(result.data));\n        } else { // fail\n            dispatch(resetUser(result.msg));\n        }\n    }\n}\n\n/**\n * get userInfo according to cookie\n */\nexport const getUser = () => {\n    return async dispatch => {\n        const response = await reqUser();\n        const result = response.data;\n        if (result.code === 0) {\n            getMsgList(dispatch, result.data._id);\n            dispatch(receiveUser(result.data));\n        } else {\n            dispatch(resetUser(result.msg));\n        }\n    }\n}\n\n/**\n * get userList async action\n */\nexport const getUserList = (type) => {\n    return async dispatch => {\n        const response = await reqUserList(type);\n        const result = response.data;\n        if (result.code === 0) {\n            dispatch(receivedUserList(result.data));\n        }\n    }\n}\n\n/**\n * read un read msg\n */\nexport const readMsg = (from, to) => {\n    return async dispatch => {\n        const response = await reqReadMsg(from);\n        const result = response.data;\n        if (result.code === 0) {\n            const count = result.data;\n            dispatch(msgRead({ count, from, to }));\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}