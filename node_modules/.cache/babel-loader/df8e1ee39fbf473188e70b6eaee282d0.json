{"ast":null,"code":"import \"antd-mobile/es/grid/style\";\nimport _Grid from \"antd-mobile/es/grid\";\nimport \"antd-mobile/es/input-item/style\";\nimport _InputItem from \"antd-mobile/es/input-item\";\nimport \"antd-mobile/es/nav-bar/style\";\nimport _NavBar from \"antd-mobile/es/nav-bar\";\nimport \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nvar _jsxFileName = \"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/src/containers/chat/chat.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMsg } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = _List.Item;\n\nclass Chat extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      content: '',\n      isShow: false // show emoji list or not\n\n    };\n\n    this.handleSend = () => {\n      const from = this.props.user._id;\n      const to = this.props.match.params.userId;\n      const content = this.state.content.trim(); // send request send msg\n\n      if (content) {\n        this.props.sendMsg({\n          from,\n          to,\n          content\n        });\n      } // clear input data\n\n\n      this.setState({\n        content: ''\n      });\n    };\n  }\n\n  // first render before\n  componentWillMount() {}\n\n  render() {\n    const {\n      user\n    } = this.props;\n    const {\n      users,\n      chatMsgs\n    } = this.props.chat; // filter chatMsgs\n\n    const my_id = user._id;\n\n    if (!users[my_id]) {\n      // control async, async sometimes no data\n      return null;\n    }\n\n    const target_id = this.props.match.params.userId;\n    const chatId = [my_id, target_id].sort().join('_');\n    const msgs = chatMsgs.filter(msg => msg.chat_id === chatId); // get target user header\n\n    const target_header = users[target_id].header;\n    const target_icon = target_header ? require(`../../assets/img/${target_header}.png`).default : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-page\",\n      children: [/*#__PURE__*/_jsxDEV(_NavBar, {\n        children: users[target_id].username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_List, {\n        children: msgs.map(msg => {\n          if (my_id === msg.to) {\n            // msg from the other\n            return /*#__PURE__*/_jsxDEV(Item, {\n              thumb: target_icon,\n              children: msg.content\n            }, msg._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Item, {\n              className: \"chat-me\",\n              extra: \"Me\",\n              children: msg.content\n            }, msg._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"am-tab-bar\",\n        children: [/*#__PURE__*/_jsxDEV(_InputItem, {\n          placeholder: \"Please input your words\",\n          value: this.state.content,\n          onChange: val => this.setState({\n            content: val\n          }),\n          extra: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDE00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: this.handleSend,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Grid, {\n          data: this.emojis,\n          columnNum: 8,\n          carouselMaxRow: 4,\n          isCarousel: true,\n          onClick: item => {\n            this.setState({\n              content: this.state.content + item.text\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user1,\n  chat: state.chat1\n}), {\n  sendMsg\n})(Chat);","map":{"version":3,"sources":["/Users/stewardsun/Desktop/技术栈/React项目/Boss Recruitment/bob-recruitment-client/src/containers/chat/chat.jsx"],"names":["React","Component","connect","sendMsg","Item","Chat","state","content","isShow","handleSend","from","props","user","_id","to","match","params","userId","trim","setState","componentWillMount","render","users","chatMsgs","chat","my_id","target_id","chatId","sort","join","msgs","filter","msg","chat_id","target_header","header","target_icon","require","default","username","map","val","emojis","item","text","user1","chat1"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AACA,MAAMC,IAAI,GAAG,MAAKA,IAAlB;;AACA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBK,KAFyB,GAEjB;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,MAAM,EAAE,KAFJ,CAEU;;AAFV,KAFiB;;AAAA,SAYzBC,UAZyB,GAYZ,MAAM;AACf,YAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAA7B;AACA,YAAMC,EAAE,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,MAAnC;AACA,YAAMV,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBW,IAAnB,EAAhB,CAHe,CAIf;;AACA,UAAIX,OAAJ,EAAa;AACT,aAAKI,KAAL,CAAWR,OAAX,CAAmB;AAAEO,UAAAA,IAAF;AAAQI,UAAAA,EAAR;AAAYP,UAAAA;AAAZ,SAAnB;AACH,OAPc,CAQf;;;AACA,WAAKY,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAtBwB;AAAA;;AAOzB;AACAa,EAAAA,kBAAkB,GAAG,CAEpB;;AAcDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEW,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKZ,KAAL,CAAWa,IAAvC,CAFK,CAGL;;AACA,UAAMC,KAAK,GAAGb,IAAI,CAACC,GAAnB;;AACA,QAAI,CAACS,KAAK,CAACG,KAAD,CAAV,EAAmB;AAAE;AACjB,aAAO,IAAP;AACH;;AACD,UAAMC,SAAS,GAAG,KAAKf,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,MAA1C;AACA,UAAMU,MAAM,GAAG,CAACF,KAAD,EAAQC,SAAR,EAAmBE,IAAnB,GAA0BC,IAA1B,CAA+B,GAA/B,CAAf;AACA,UAAMC,IAAI,GAAGP,QAAQ,CAACQ,MAAT,CAAgBC,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgBN,MAAvC,CAAb,CAVK,CAYL;;AACA,UAAMO,aAAa,GAAGZ,KAAK,CAACI,SAAD,CAAL,CAAiBS,MAAvC;AACA,UAAMC,WAAW,GAAGF,aAAa,GAAGG,OAAO,CAAE,oBAAmBH,aAAc,MAAnC,CAAP,CAAiDI,OAApD,GAA8D,IAA/F;AAEA,wBACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACI;AAAA,kBAAShB,KAAK,CAACI,SAAD,CAAL,CAAiBa;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAEQT,IAAI,CAACU,GAAL,CAASR,GAAG,IAAI;AACZ,cAAIP,KAAK,KAAKO,GAAG,CAAClB,EAAlB,EAAsB;AAAE;AACpB,gCACI,QAAC,IAAD;AAAoB,cAAA,KAAK,EAAEsB,WAA3B;AAAA,wBACKJ,GAAG,CAACzB;AADT,eAAWyB,GAAG,CAACnB,GAAf;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WAND,MAMO;AACH,gCACI,QAAC,IAAD;AAAoB,cAAA,SAAS,EAAC,SAA9B;AAAwC,cAAA,KAAK,EAAC,IAA9C;AAAA,wBACKmB,GAAG,CAACzB;AADT,eAAWyB,GAAG,CAACnB,GAAf;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH;AACJ,SAdD;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ,eAqBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AACI,UAAA,WAAW,EAAC,yBADhB;AAEI,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,OAFtB;AAGI,UAAA,QAAQ,EAAEkC,GAAG,IAAI,KAAKtB,QAAL,CAAc;AAAEZ,YAAAA,OAAO,EAAEkC;AAAX,WAAd,CAHrB;AAII,UAAA,KAAK,eACD;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,OAAO,EAAE,KAAKhC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AACI,UAAA,IAAI,EAAE,KAAKiC,MADf;AAEI,UAAA,SAAS,EAAE,CAFf;AAGI,UAAA,cAAc,EAAE,CAHpB;AAII,UAAA,UAAU,EAAE,IAJhB;AAKI,UAAA,OAAO,EAAGC,IAAD,IAAU;AACf,iBAAKxB,QAAL,CAAc;AAAEZ,cAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqBoC,IAAI,CAACC;AAArC,aAAd;AACH;AAPL;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8CH;;AAtFwB;;AAyF7B,eAAe1C,OAAO,CAClBI,KAAK,KAAK;AAAEM,EAAAA,IAAI,EAAEN,KAAK,CAACuC,KAAd;AAAqBrB,EAAAA,IAAI,EAAElB,KAAK,CAACwC;AAAjC,CAAL,CADa,EAElB;AAAE3C,EAAAA;AAAF,CAFkB,CAAP,CAGbE,IAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { NavBar, List, InputItem, Grid } from 'antd-mobile'\nimport { connect } from 'react-redux'\nimport { sendMsg } from '../../redux/actions'\nconst Item = List.Item\nclass Chat extends Component {\n\n    state = {\n        content: '',\n        isShow: false // show emoji list or not\n    }\n\n    // first render before\n    componentWillMount() {\n\n    }\n\n    handleSend = () => {\n        const from = this.props.user._id;\n        const to = this.props.match.params.userId;\n        const content = this.state.content.trim();\n        // send request send msg\n        if (content) {\n            this.props.sendMsg({ from, to, content });\n        }\n        // clear input data\n        this.setState({ content: '' });\n    }\n\n    render() {\n        const { user } = this.props;\n        const { users, chatMsgs } = this.props.chat;\n        // filter chatMsgs\n        const my_id = user._id;\n        if (!users[my_id]) { // control async, async sometimes no data\n            return null;\n        }\n        const target_id = this.props.match.params.userId;\n        const chatId = [my_id, target_id].sort().join('_');\n        const msgs = chatMsgs.filter(msg => msg.chat_id === chatId);\n\n        // get target user header\n        const target_header = users[target_id].header;\n        const target_icon = target_header ? require(`../../assets/img/${target_header}.png`).default : null;\n\n        return (\n            <div id='chat-page'>\n                <NavBar>{users[target_id].username}</NavBar>\n                <List>\n                    {\n                        msgs.map(msg => {\n                            if (my_id === msg.to) { // msg from the other\n                                return (\n                                    <Item key={msg._id} thumb={target_icon}>\n                                        {msg.content}\n                                    </Item>\n                                )\n                            } else {\n                                return (\n                                    <Item key={msg._id} className='chat-me' extra='Me'>\n                                        {msg.content}\n                                    </Item>\n                                )\n                            }\n                        })\n                    }\n                </List>\n                <div className='am-tab-bar'>\n                    <InputItem\n                        placeholder=\"Please input your words\"\n                        value={this.state.content}\n                        onChange={val => this.setState({ content: val })}\n                        extra={\n                            <span>\n                                <span>😀</span>\n                                <span onClick={this.handleSend}>Send</span>\n                            </span>\n                        }\n                    />\n                    <Grid\n                        data={this.emojis}\n                        columnNum={8}\n                        carouselMaxRow={4}\n                        isCarousel={true}\n                        onClick={(item) => {\n                            this.setState({ content: this.state.content + item.text })\n                        }}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ user: state.user1, chat: state.chat1 }),\n    { sendMsg }\n)(Chat)"]},"metadata":{},"sourceType":"module"}