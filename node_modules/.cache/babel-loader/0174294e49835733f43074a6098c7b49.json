{"ast":null,"code":"import \"antd-mobile/es/tab-bar/style\";\nimport _TabBar from \"antd-mobile/es/tab-bar\";\nvar _jsxFileName = \"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/src/components/nav-footer/nav-footer.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = _TabBar.Item; // hope use router library api in un-router component?\n// withRoute()\n\nclass NavFooter extends Component {\n  render() {\n    let {\n      navList,\n      unReadCount\n    } = this.props;\n    const {\n      pathname\n    } = this.props.location; // filter hide = true item\n\n    navList = navList.filter(nav => !nav.hide);\n    return /*#__PURE__*/_jsxDEV(_TabBar, {\n      children: navList.map(nav => /*#__PURE__*/_jsxDEV(Item, {\n        badge: nav.path === '/message' ? unReadCount : 0,\n        title: nav.text,\n        icon: {\n          uri: require(`./images/${nav.icon}.png`).default\n        },\n        selectedIcon: {\n          uri: require(`./images/${nav.icon}-selected.png`).default\n        },\n        selected: pathname === nav.path,\n        onPress: () => {\n          this.props.history.replace(nav.path);\n        }\n      }, nav.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nNavFooter.propTypes = {\n  navList: PropTypes.array.isRequired,\n  unReadCount: PropTypes.number.isRequired\n};\nexport default _c = withRouter(NavFooter); // export withRouter(NavFooter), this component will get history, location, math.....\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/stewardsun/Desktop/技术栈/React项目/Boss Recruitment/bob-recruitment-client/src/components/nav-footer/nav-footer.jsx"],"names":["React","Component","PropTypes","withRouter","Item","NavFooter","render","navList","unReadCount","props","pathname","location","filter","nav","hide","map","path","text","uri","require","icon","default","history","replace","propTypes","array","isRequired","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,IAAI,GAAG,QAAOA,IAApB,C,CAEA;AACA;;AACA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAO9BK,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA2B,KAAKC,KAApC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKD,KAAL,CAAWE,QAAhC,CAFK,CAGL;;AACAJ,IAAAA,OAAO,GAAGA,OAAO,CAACK,MAAR,CAAeC,GAAG,IAAI,CAACA,GAAG,CAACC,IAA3B,CAAV;AACA,wBACI;AAAA,gBAEQP,OAAO,CAACQ,GAAR,CAAaF,GAAD,iBACR,QAAC,IAAD;AACI,QAAA,KAAK,EAAEA,GAAG,CAACG,IAAJ,KAAa,UAAb,GAA0BR,WAA1B,GAAwC,CADnD;AAEI,QAAA,KAAK,EAAEK,GAAG,CAACI,IAFf;AAGI,QAAA,IAAI,EAAE;AAAEC,UAAAA,GAAG,EAAEC,OAAO,CAAE,YAAWN,GAAG,CAACO,IAAK,MAAtB,CAAP,CAAoCC;AAA3C,SAHV;AAII,QAAA,YAAY,EAAE;AAAEH,UAAAA,GAAG,EAAEC,OAAO,CAAE,YAAWN,GAAG,CAACO,IAAK,eAAtB,CAAP,CAA6CC;AAApD,SAJlB;AAKI,QAAA,QAAQ,EAAEX,QAAQ,KAAKG,GAAG,CAACG,IAL/B;AAMI,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKP,KAAL,CAAWa,OAAX,CAAmBC,OAAnB,CAA2BV,GAAG,CAACG,IAA/B;AAAsC;AAN3D,SAAWH,GAAG,CAACG,IAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA5B6B;;AAA5BX,S,CAEKmB,S,GAAY;AACfjB,EAAAA,OAAO,EAAEL,SAAS,CAACuB,KAAV,CAAgBC,UADV;AAEflB,EAAAA,WAAW,EAAEN,SAAS,CAACyB,MAAV,CAAiBD;AAFf,C;AA6BvB,oBAAevB,UAAU,CAACE,SAAD,CAAzB,C,CAAqC","sourcesContent":["import React, { Component } from 'react'\nimport { TabBar } from 'antd-mobile'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\n\nconst Item = TabBar.Item;\n\n// hope use router library api in un-router component?\n// withRoute()\nclass NavFooter extends Component {\n\n    static propTypes = {\n        navList: PropTypes.array.isRequired,\n        unReadCount: PropTypes.number.isRequired\n    }\n\n    render() {\n        let { navList, unReadCount } = this.props;\n        const { pathname } = this.props.location;\n        // filter hide = true item\n        navList = navList.filter(nav => !nav.hide);\n        return (\n            <TabBar>\n                {\n                    navList.map((nav) => (\n                        <Item key={nav.path}\n                            badge={nav.path === '/message' ? unReadCount : 0}\n                            title={nav.text}\n                            icon={{ uri: require(`./images/${nav.icon}.png`).default }}\n                            selectedIcon={{ uri: require(`./images/${nav.icon}-selected.png`).default }}\n                            selected={pathname === nav.path}\n                            onPress={() => { this.props.history.replace(nav.path) }}\n                        ></Item>\n                    ))\n                }\n            </TabBar>\n        )\n    }\n}\n\nexport default withRouter(NavFooter) // export withRouter(NavFooter), this component will get history, location, math.....\n"]},"metadata":{},"sourceType":"module"}