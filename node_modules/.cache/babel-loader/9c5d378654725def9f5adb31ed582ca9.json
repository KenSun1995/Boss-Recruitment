{"ast":null,"code":"var _jsxFileName = \"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/src/containers/main/main.jsx\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BossInfo from '../boss-info/boss-info';\nimport ExpertInfo from '../expert-info/expert-info';\n/**\n * main component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  render() {\n    // // check user if login already\n    // const { user } = this.props\n    // if (!user._id) {\n    //     return <Redirect to={'/login'} />\n    // }\n    // read userId from cookie, \n    // if no, redirect to login page\n    // if yes, get user status of redux, if there is no _id in user, return null (don't do any reaction)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bossInfo\",\n          component: BossInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/expertInfo\",\n          component: ExpertInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user1\n}))(Main);\n/**\n * need to implement login automatic\n * * 1. if cookie includes userId, send request to get user, don't do any perform temporary\n * * 2. if cookie doesn't include userId, auto go into login page\n */\n\n/**\n * if already login, if request /\n * * according to user's type and header to calculate a redirect path, and auto redirect it\n * *\n */","map":{"version":3,"sources":["/Users/stewardsun/Desktop/技术栈/React项目/Boss Recruitment/bob-recruitment-client/src/containers/main/main.jsx"],"names":["React","Component","Switch","Route","Redirect","connect","BossInfo","ExpertInfo","Main","render","state","user","user1"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA;AACA;AACA;;;;AACA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AACzBQ,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,wBACI;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEH;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,aAAZ;AAA0B,UAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AApBwB;;AAuB7B,eAAeF,OAAO,CAClBK,KAAK,KAAK;AAAEC,EAAAA,IAAI,EAAED,KAAK,CAACE;AAAd,CAAL,CADa,CAAP,CAEbJ,IAFa,CAAf;AAIA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport BossInfo from '../boss-info/boss-info'\nimport ExpertInfo from '../expert-info/expert-info'\n/**\n * main component\n */\nclass Main extends Component {\n    render() {\n        // // check user if login already\n        // const { user } = this.props\n        // if (!user._id) {\n        //     return <Redirect to={'/login'} />\n        // }\n\n        // read userId from cookie, \n        // if no, redirect to login page\n        // if yes, get user status of redux, if there is no _id in user, return null (don't do any reaction)\n\n        return (\n            <div>\n                <Switch>\n                    <Route path='/bossInfo' component={BossInfo} />\n                    <Route path='/expertInfo' component={ExpertInfo} />\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ user: state.user1 })\n)(Main)\n\n/**\n * need to implement login automatic\n * * 1. if cookie includes userId, send request to get user, don't do any perform temporary\n * * 2. if cookie doesn't include userId, auto go into login page\n */\n/**\n * if already login, if request /\n * * according to user's type and header to calculate a redirect path, and auto redirect it\n * *\n */"]},"metadata":{},"sourceType":"module"}