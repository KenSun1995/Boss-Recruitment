{"ast":null,"code":"import \"antd-mobile/es/badge/style\";\nimport _Badge from \"antd-mobile/es/badge\";\nimport \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nvar _jsxFileName = \"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/src/containers/message/message.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = _List.Item;\nconst Brief = Item.Brief;\n/**\n *  group chatMsgs by chat_id, get last item\n * 1. find out last msg for each chat, and store it by obj container {chat_id: lastMsgs}\n * 2. get all array of lastMsgs\n * 3. sort the array by (create_time desc)\n */\n\nfunction getLastMsgs(chatMsgs) {\n  let lastMsgObjs = {};\n  chatMsgs.forEach(msg => {\n    const chatId = msg.chat_id;\n    let lastMsg = lastMsgObjs[chatId];\n\n    if (!lastMsg) {\n      lastMsgObjs[chatId] = msg;\n    } else {\n      if (msg.create_time > lastMsg.create_time) {\n        lastMsgObjs[chatId] = msg;\n      }\n    }\n  });\n  const lastMsgs = Object.values(lastMsgObjs); // lastMsgObjs is obj container, to get array with all values\n\n  lastMsgs.sort((m1, m2) => {\n    // if result < 0, put m1 first, if result = 0, don't do anything, if result > 0, put m2 first\n    return m2.create_time - m1.create_time;\n  });\n  return lastMsgs;\n}\n\nclass Message extends Component {\n  render() {\n    const {\n      user\n    } = this.props;\n    const {\n      users,\n      chatMsgs\n    } = this.props.chat;\n    const lastMsgs = getLastMsgs(chatMsgs);\n    return /*#__PURE__*/_jsxDEV(_List, {\n      style: {\n        marginTop: 50,\n        marginBottom: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        extra: /*#__PURE__*/_jsxDEV(_Badge, {\n          text: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this),\n        thumb: require(`../../assets/img/avatar1.png`).default,\n        arrow: \"horizontal\",\n        children: [\"\\u4F60\\u597D\", /*#__PURE__*/_jsxDEV(Brief, {\n          children: \"nr1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        extra: /*#__PURE__*/_jsxDEV(_Badge, {\n          text: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }, this),\n        thumb: require(`../../assets/img/avatar2.png`).default,\n        arrow: \"horizontal\",\n        children: [\"\\u4F60\\u597D2\", /*#__PURE__*/_jsxDEV(Brief, {\n          children: \"nr2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user1,\n  chat: state.chat1\n}), {})(Message);","map":{"version":3,"sources":["/Users/stewardsun/Desktop/技术栈/React项目/Boss Recruitment/bob-recruitment-client/src/containers/message/message.jsx"],"names":["React","Component","connect","Item","Brief","getLastMsgs","chatMsgs","lastMsgObjs","forEach","msg","chatId","chat_id","lastMsg","create_time","lastMsgs","Object","values","sort","m1","m2","Message","render","user","props","users","chat","marginTop","marginBottom","require","default","state","user1","chat1"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAKA,IAAlB;AACA,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC3B,MAAIC,WAAW,GAAG,EAAlB;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAiBC,GAAG,IAAI;AACpB,UAAMC,MAAM,GAAGD,GAAG,CAACE,OAAnB;AACA,QAAIC,OAAO,GAAGL,WAAW,CAACG,MAAD,CAAzB;;AACA,QAAI,CAACE,OAAL,EAAc;AACVL,MAAAA,WAAW,CAACG,MAAD,CAAX,GAAsBD,GAAtB;AACH,KAFD,MAEO;AACH,UAAIA,GAAG,CAACI,WAAJ,GAAkBD,OAAO,CAACC,WAA9B,EAA2C;AACvCN,QAAAA,WAAW,CAACG,MAAD,CAAX,GAAsBD,GAAtB;AACH;AACJ;AACJ,GAVD;AAWA,QAAMK,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcT,WAAd,CAAjB,CAb2B,CAakB;;AAC7CO,EAAAA,QAAQ,CAACG,IAAT,CAAc,CAACC,EAAD,EAAKC,EAAL,KAAY;AAAE;AACxB,WAAOA,EAAE,CAACN,WAAH,GAAiBK,EAAE,CAACL,WAA3B;AACH,GAFD;AAGA,SAAOC,QAAP;AACH;;AAED,MAAMM,OAAN,SAAsBnB,SAAtB,CAAgC;AAC5BoB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASlB,MAAAA;AAAT,QAAsB,KAAKiB,KAAL,CAAWE,IAAvC;AACA,UAAMX,QAAQ,GAAGT,WAAW,CAACC,QAAD,CAA5B;AAGA,wBACI;AAAM,MAAA,KAAK,EAAE;AAAEoB,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,YAAY,EAAE;AAA/B,OAAb;AAAA,8BACI,QAAC,IAAD;AACI,QAAA,KAAK,eAAE;AAAO,UAAA,IAAI,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,gBADX;AAEI,QAAA,KAAK,EAAEC,OAAO,CAAE,8BAAF,CAAP,CAAwCC,OAFnD;AAGI,QAAA,KAAK,EAAC,YAHV;AAAA,gDAMI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,IAAD;AACI,QAAA,KAAK,eAAE;AAAO,UAAA,IAAI,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,gBADX;AAEI,QAAA,KAAK,EAAED,OAAO,CAAE,8BAAF,CAAP,CAAwCC,OAFnD;AAGI,QAAA,KAAK,EAAC,YAHV;AAAA,iDAMI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AA3B2B;;AA6BhC,eAAe3B,OAAO,CAClB4B,KAAK,KAAK;AAAER,EAAAA,IAAI,EAAEQ,KAAK,CAACC,KAAd;AAAqBN,EAAAA,IAAI,EAAEK,KAAK,CAACE;AAAjC,CAAL,CADa,EAElB,EAFkB,CAAP,CAGbZ,OAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { List, Badge } from 'antd-mobile'\nconst Item = List.Item\nconst Brief = Item.Brief\n\n/**\n *  group chatMsgs by chat_id, get last item\n * 1. find out last msg for each chat, and store it by obj container {chat_id: lastMsgs}\n * 2. get all array of lastMsgs\n * 3. sort the array by (create_time desc)\n */\nfunction getLastMsgs(chatMsgs) {\n    let lastMsgObjs = {};\n    chatMsgs.forEach(msg => {\n        const chatId = msg.chat_id;\n        let lastMsg = lastMsgObjs[chatId];\n        if (!lastMsg) {\n            lastMsgObjs[chatId] = msg;\n        } else {\n            if (msg.create_time > lastMsg.create_time) {\n                lastMsgObjs[chatId] = msg;\n            }\n        }\n    })\n    const lastMsgs = Object.values(lastMsgObjs); // lastMsgObjs is obj container, to get array with all values\n    lastMsgs.sort((m1, m2) => { // if result < 0, put m1 first, if result = 0, don't do anything, if result > 0, put m2 first\n        return m2.create_time - m1.create_time\n    });\n    return lastMsgs;\n}\n\nclass Message extends Component {\n    render() {\n        const { user } = this.props;\n        const { users, chatMsgs } = this.props.chat;\n        const lastMsgs = getLastMsgs(chatMsgs);\n\n\n        return (\n            <List style={{ marginTop: 50, marginBottom: 40 }}>\n                <Item\n                    extra={<Badge text={3} />}\n                    thumb={require(`../../assets/img/avatar1.png`).default}\n                    arrow='horizontal'\n                >\n                    你好\n                    <Brief>nr1</Brief>\n                </Item>\n                <Item\n                    extra={<Badge text={0} />}\n                    thumb={require(`../../assets/img/avatar2.png`).default}\n                    arrow='horizontal'\n                >\n                    你好2\n                    <Brief>nr2</Brief>\n                </Item>\n            </List>\n        )\n    }\n}\nexport default connect(\n    state => ({ user: state.user1, chat: state.chat1 }),\n    {}\n)(Message)"]},"metadata":{},"sourceType":"module"}