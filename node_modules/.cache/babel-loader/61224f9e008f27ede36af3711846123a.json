{"ast":null,"code":"import \"antd-mobile/es/grid/style\";\nimport _Grid from \"antd-mobile/es/grid\";\nimport \"antd-mobile/es/input-item/style\";\nimport _InputItem from \"antd-mobile/es/input-item\";\nimport \"antd-mobile/es/nav-bar/style\";\nimport _NavBar from \"antd-mobile/es/nav-bar\";\nimport \"antd-mobile/es/icon/style\";\nimport _Icon from \"antd-mobile/es/icon\";\nimport \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nvar _jsxFileName = \"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/src/containers/chat/chat.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMsg, readMsg } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = _List.Item;\n\nclass Chat extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      content: '',\n      isShow: false // show emoji list or not\n\n    };\n\n    this.handleSend = () => {\n      const from = this.props.user._id;\n      const to = this.props.match.params.userId;\n      const content = this.state.content.trim(); // send request send msg\n\n      if (content) {\n        this.props.sendMsg({\n          from,\n          to,\n          content\n        });\n      } // clear input data\n\n\n      this.setState({\n        content: '',\n        isShow: false\n      });\n    };\n\n    this.toggleShow = () => {\n      const isShow = !this.state.isShow;\n      this.setState({\n        isShow\n      });\n\n      if (isShow) {\n        // fix bug, this bug is anti-mobile component internal bug, just fix it\n        setTimeout(() => {\n          window.dispatchEvent(new Event('resize'));\n        }, 0);\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  componentWillUnmount() {\n    // update un read msg\n    const targetId = this.props.match.params.userId;\n    const userId = this.props.user._id;\n    this.props.readMsg({\n      targetId,\n      userId\n    });\n  } // first render before\n\n\n  UNSAFE_componentWillMount() {\n    // init emoji list data\n    const emojis = ['😀', '😃', '😄', '😁', '😆', '😅', '🤣', '😂', '🙂', '🙃', '😉', '😊', '😇', '🥰', '😍', '🤩', '😘', '😗', '😚', '😙', '🥲', '😋', '😛', '😜', '🤪', '😝', '🤑', '🤗', '🤭', '🤫', '🤔', '🤐', '🤨', '😐', '😑', '😶', '😶‍🌫️', '😏', '😒', '🙄', '😬', '😮‍💨', '🤥', '😌', '😔', '😪', '🤤', '😴', '😷', '🤒', '🤕', '🤢', '🤮', '🤧', '🥵', '🥶'];\n    this.emojis = emojis.map(emoji => ({\n      text: emoji\n    }));\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    const {\n      users,\n      chatMsgs\n    } = this.props.chat; // filter chatMsgs\n\n    const my_id = user._id;\n\n    if (!users[my_id]) {\n      // control async, async sometimes no data\n      return null;\n    }\n\n    const target_id = this.props.match.params.userId;\n    const chatId = [my_id, target_id].sort().join('_');\n    const msgs = chatMsgs.filter(msg => msg.chat_id === chatId); // get target user header\n\n    const target_header = users[target_id].header;\n    const target_icon = target_header ? require(`../../assets/img/${target_header}.png`).default : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-page\",\n      children: [/*#__PURE__*/_jsxDEV(_NavBar, {\n        icon: /*#__PURE__*/_jsxDEV(_Icon, {\n          type: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 27\n        }, this),\n        className: \"sticky-header\",\n        onLeftClick: () => this.props.history.goBack(),\n        children: users[target_id].username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_List, {\n        style: {\n          marginTop: 50,\n          marginBottom: 40\n        },\n        children: msgs.map(msg => {\n          if (my_id === msg.to) {\n            // msg from the other\n            return /*#__PURE__*/_jsxDEV(Item, {\n              thumb: target_icon,\n              children: msg.content\n            }, msg._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 37\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Item, {\n              className: \"chat-me\",\n              extra: \"Me\",\n              children: msg.content\n            }, msg._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"am-tab-bar\",\n        children: [/*#__PURE__*/_jsxDEV(_InputItem, {\n          placeholder: \"Please input your words\",\n          value: this.state.content,\n          onChange: val => this.setState({\n            content: val\n          }),\n          onFocus: () => this.setState({\n            isShow: false\n          }),\n          extra: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: this.toggleShow,\n              style: {\n                marginRight: 5\n              },\n              children: \"\\uD83D\\uDE00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: this.handleSend,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), this.state.isShow ? /*#__PURE__*/_jsxDEV(_Grid, {\n          data: this.emojis,\n          columnNum: 8,\n          carouselMaxRow: 4,\n          isCarousel: true,\n          onClick: item => {\n            this.setState({\n              content: this.state.content + item.text\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user1,\n  chat: state.chat1\n}), {\n  sendMsg,\n  readMsg\n})(Chat);","map":{"version":3,"sources":["/Users/stewardsun/Desktop/技术栈/React项目/Boss Recruitment/bob-recruitment-client/src/containers/chat/chat.jsx"],"names":["React","Component","connect","sendMsg","readMsg","Item","Chat","state","content","isShow","handleSend","from","props","user","_id","to","match","params","userId","trim","setState","toggleShow","setTimeout","window","dispatchEvent","Event","componentDidMount","scrollTo","document","body","scrollHeight","componentDidUpdate","componentWillUnmount","targetId","UNSAFE_componentWillMount","emojis","map","emoji","text","render","users","chatMsgs","chat","my_id","target_id","chatId","sort","join","msgs","filter","msg","chat_id","target_header","header","target_icon","require","default","history","goBack","username","marginTop","marginBottom","val","marginRight","item","user1","chat1"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavBar, List, InputItem, Grid, Icon } from 'antd-mobile'\nimport { connect } from 'react-redux'\nimport { sendMsg, readMsg } from '../../redux/actions'\nconst Item = List.Item\nclass Chat extends Component {\n\n    state = {\n        content: '',\n        isShow: false // show emoji list or not\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, document.body.scrollHeight);\n    }\n\n    componentDidUpdate() {\n        window.scrollTo(0, document.body.scrollHeight);\n    }\n\n    componentWillUnmount() {\n        // update un read msg\n        const targetId = this.props.match.params.userId;\n        const userId = this.props.user._id;\n        this.props.readMsg({ targetId, userId });\n    }\n    // first render before\n    UNSAFE_componentWillMount() {\n        // init emoji list data\n        const emojis = [\n            '😀', '😃', '😄', '😁', '😆', '😅', '🤣', '😂',\n            '🙂', '🙃', '😉', '😊', '😇', '🥰', '😍', '🤩',\n            '😘', '😗', '😚', '😙', '🥲', '😋', '😛', '😜',\n            '🤪', '😝', '🤑', '🤗', '🤭', '🤫', '🤔', '🤐',\n            '🤨', '😐', '😑', '😶', '😶‍🌫️', '😏', '😒', '🙄',\n            '😬', '😮‍💨', '🤥', '😌', '😔', '😪', '🤤', '😴',\n            '😷', '🤒', '🤕', '🤢', '🤮', '🤧', '🥵', '🥶'];\n        this.emojis = emojis.map(emoji => ({ text: emoji }));\n    }\n\n    handleSend = () => {\n        const from = this.props.user._id;\n        const to = this.props.match.params.userId;\n        const content = this.state.content.trim();\n        // send request send msg\n        if (content) {\n            this.props.sendMsg({ from, to, content });\n        }\n        // clear input data\n        this.setState({ content: '', isShow: false });\n    }\n\n    toggleShow = () => {\n        const isShow = !this.state.isShow;\n        this.setState({ isShow });\n        if (isShow) {\n            // fix bug, this bug is anti-mobile component internal bug, just fix it\n            setTimeout(() => {\n                window.dispatchEvent(new Event('resize'))\n            }, 0)\n        }\n    }\n\n    render() {\n        const { user } = this.props;\n        const { users, chatMsgs } = this.props.chat;\n        // filter chatMsgs\n        const my_id = user._id;\n        if (!users[my_id]) { // control async, async sometimes no data\n            return null;\n        }\n        const target_id = this.props.match.params.userId;\n        const chatId = [my_id, target_id].sort().join('_');\n        const msgs = chatMsgs.filter(msg => msg.chat_id === chatId);\n\n        // get target user header\n        const target_header = users[target_id].header;\n        const target_icon = target_header ? require(`../../assets/img/${target_header}.png`).default : null;\n\n        return (\n            <div id='chat-page'>\n                <NavBar\n                    icon={<Icon type='left' />}\n                    className='sticky-header'\n                    onLeftClick={() => this.props.history.goBack()}\n                >\n                    {users[target_id].username}\n                </NavBar>\n                <List style={{ marginTop: 50, marginBottom: 40 }}>\n                    {\n                        msgs.map(msg => {\n                            if (my_id === msg.to) { // msg from the other\n                                return (\n                                    <Item key={msg._id} thumb={target_icon}>\n                                        {msg.content}\n                                    </Item>\n                                )\n                            } else {\n                                return (\n                                    <Item key={msg._id} className='chat-me' extra='Me'>\n                                        {msg.content}\n                                    </Item>\n                                )\n                            }\n                        })\n                    }\n                </List>\n                <div className='am-tab-bar'>\n                    <InputItem\n                        placeholder=\"Please input your words\"\n                        value={this.state.content}\n                        onChange={val => this.setState({ content: val })}\n                        onFocus={() => this.setState({ isShow: false })}\n                        extra={\n                            <span>\n                                <span onClick={this.toggleShow} style={{ marginRight: 5 }}>😀</span>\n                                <span onClick={this.handleSend}>Send</span>\n                            </span>\n                        }\n                    />\n                    {this.state.isShow ? (\n                        <Grid\n                            data={this.emojis}\n                            columnNum={8}\n                            carouselMaxRow={4}\n                            isCarousel={true}\n                            onClick={(item) => {\n                                this.setState({ content: this.state.content + item.text })\n                            }}\n                        />\n                    ) : null}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({ user: state.user1, chat: state.chat1 }),\n    { sendMsg, readMsg }\n)(Chat)"]},"metadata":{},"sourceType":"module"}