{"ast":null,"code":"import _toConsumableArray from\"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/stewardsun/Desktop/\\u6280\\u672F\\u6808/React\\u9879\\u76EE/Boss Recruitment/bob-recruitment-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/**\n * There are lots of reducer functions: \n *      They will return a new state according to old state and specified action\n */import{combineReducers}from'redux';import{AUTH_SUCCESS,ERROR_MSG,RECEIVE_USER,RESET_USER,RECEIVE_USER_LIST,RECEIVE_MSG_LIST,RECEIVE_MSG,MSG_READ}from'./action-types';import{getRedirectTo}from'../utils';var initUser={username:'',// username\ntype:'',// type\nmsg:'',// error info\nredirectTo:''// need auto redirect router path\n};/**\n * produce user\n */function user1(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initUser;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case AUTH_SUCCESS:// data is user\nvar _action$data=action.data,type=_action$data.type,header=_action$data.header;return _objectSpread(_objectSpread({},action.data),{},{redirectTo:getRedirectTo(type,header)});case ERROR_MSG:// data is msg\nreturn _objectSpread(_objectSpread({},state),{},{msg:action.data});case RECEIVE_USER:// data is user\nreturn action.data;case RESET_USER:// data is msg\nreturn _objectSpread(_objectSpread({},initUser),{},{msg:action.data});// use initUser here to ensure return back to login page\ndefault:return state;}}/**\n * produce user list\n */var initUserList=[];function userList1(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initUserList;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case RECEIVE_USER_LIST:// data is userList\nreturn action.data;default:return state;}}/**\n * produce chat status reducer\n */var initChat={users:{},// all users, attr name: userId, attr value: {username, header}\nchatMsgs:[],// current msg arrays\nunReadCount:0// totally unread count\n};function chat1(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initChat;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case RECEIVE_MSG_LIST:var _action$data2=action.data,users=_action$data2.users,chatMsgs=_action$data2.chatMsgs,userId=_action$data2.userId;return{users:users,chatMsgs:chatMsgs,unReadCount:chatMsgs.reduce(function(preTotal,msg){return preTotal+(!msg.read&&msg.to===userId?1:0);},0)};case RECEIVE_MSG:// data: chatMsg\nvar chatMsg=action.data.chatMsg;return{users:state.users,chatMsgs:[].concat(_toConsumableArray(state.chatMsgs),[chatMsg]),unReadCount:state.unReadCount+(!chatMsg.read&&chatMsg.to===action.data.userId?1:0)};case MSG_READ:var _action$data3=action.data,from=_action$data3.from,to=_action$data3.to,count=_action$data3.count;return{users:state.users,chatMsgs:state.chatMsgs.map(function(msg){if(msg.from===from&&msg.to===to&&!msg.read){return _objectSpread(_objectSpread({},msg),{},{read:true});// !!!\n}else{return msg;}}),unReadCount:state.unReadCount-count};default:return state;}}export default combineReducers({user1:user1,userList1:userList1,chat1:chat1});/**\n * to export state's structure: {user1:{}, userList1:[], chat:{}}\n */","map":{"version":3,"sources":["/Users/stewardsun/Desktop/技术栈/React项目/Boss Recruitment/bob-recruitment-client/src/redux/reducers.js"],"names":["combineReducers","AUTH_SUCCESS","ERROR_MSG","RECEIVE_USER","RESET_USER","RECEIVE_USER_LIST","RECEIVE_MSG_LIST","RECEIVE_MSG","MSG_READ","getRedirectTo","initUser","username","type","msg","redirectTo","user1","state","action","data","header","initUserList","userList1","initChat","users","chatMsgs","unReadCount","chat1","userId","reduce","preTotal","read","to","chatMsg","from","count","map"],"mappings":"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","sourcesContent":["/**\n * There are lots of reducer functions: \n *      They will return a new state according to old state and specified action\n */\nimport { combineReducers } from 'redux'\nimport {\n    AUTH_SUCCESS,\n    ERROR_MSG,\n    RECEIVE_USER,\n    RESET_USER,\n    RECEIVE_USER_LIST,\n    RECEIVE_MSG_LIST,\n    RECEIVE_MSG,\n    MSG_READ\n} from './action-types'\n\nimport { getRedirectTo } from '../utils'\nconst initUser = {\n    username: '', // username\n    type: '',     // type\n    msg: '',      // error info\n    redirectTo: '', // need auto redirect router path\n}\n/**\n * produce user\n */\nfunction user1(state = initUser, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS: // data is user\n            const { type, header } = action.data\n            return { ...action.data, redirectTo: getRedirectTo(type, header) };\n        case ERROR_MSG:    // data is msg\n            return { ...state, msg: action.data };\n        case RECEIVE_USER:    // data is user\n            return action.data;\n        case RESET_USER:    // data is msg\n            return { ...initUser, msg: action.data }; // use initUser here to ensure return back to login page\n        default:\n            return state;\n    }\n}\n/**\n * produce user list\n */\nconst initUserList = [];\nfunction userList1(state = initUserList, action) {\n    switch (action.type) {\n        case RECEIVE_USER_LIST: // data is userList\n            return action.data;\n        default:\n            return state;\n    }\n}\n\n/**\n * produce chat status reducer\n */\nconst initChat = {\n    users: {},     // all users, attr name: userId, attr value: {username, header}\n    chatMsgs: [],  // current msg arrays\n    unReadCount: 0 // totally unread count\n}\nfunction chat1(state = initChat, action) {\n    switch (action.type) {\n        case RECEIVE_MSG_LIST:\n            const { users, chatMsgs, userId } = action.data;\n            return {\n                users,\n                chatMsgs,\n                unReadCount: chatMsgs.reduce((preTotal, msg) => preTotal + (!msg.read && msg.to === userId ? 1 : 0), 0)\n            }\n        case RECEIVE_MSG: // data: chatMsg\n            const { chatMsg } = action.data;\n            return {\n                users: state.users,\n                chatMsgs: [...state.chatMsgs, chatMsg],\n                unReadCount: state.unReadCount + (!chatMsg.read && chatMsg.to === action.data.userId ? 1 : 0)\n            }\n        case MSG_READ:\n            const { from, to, count } = action.data;\n            return {\n                users: state.users,\n                chatMsgs: state.chatMsgs.map(msg => {\n                    if (msg.from === from && msg.to === to && !msg.read) {\n                        return { ...msg, read: true }; // !!!\n                    } else {\n                        return msg;\n                    }\n                }),\n                unReadCount: state.unReadCount - count\n            }\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    user1,\n    userList1,\n    chat1\n})\n/**\n * to export state's structure: {user1:{}, userList1:[], chat:{}}\n */\n"]},"metadata":{},"sourceType":"module"}